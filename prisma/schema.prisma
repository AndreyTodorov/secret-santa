// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

generator erd {
    provider = "prisma-erd-generator-markdown"
    output   = "./ERD.md"
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?

    // helpers
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deletedAt DateTime?

    // relation fields
    participant      Participant?
    participantGroup ParticipantGroup[]
    createdParties   Party[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Party {
    id             String      @id @default(cuid())
    date           DateTime
    notificationAt DateTime
    description    String?
    budget         String?
    status         PartyStatus @default(DRAFT)

    // helpers
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    deletedAt     DateTime?
    deactivatedAt DateTime?

    // relation fields
    participants Participant[]
    creator      User          @relation(fields: [creatorId], references: [id])
    creatorId    String
}

enum PartyStatus {
    DRAFT
    ASSEMBLED
    NOTIFIED
    READY
    FINISHED
    CANCELLED
}

model Participant {
    id        String  @id @default(cuid())
    firstName String
    lastName  String?
    email     String  @unique
    phone     String?

    // helpers
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deletedAt DateTime?

    // relation fields
    user               User?            @relation(fields: [userId], references: [id])
    userId             String?          @unique
    parties            Party[]
    participantGroup   ParticipantGroup @relation(fields: [participantGroupId], references: [id])
    participantGroupId String
}

model ParticipantGroup {
    id          String    @id @default(cuid())
    name        String
    description String?
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    deletedAt   DateTime?

    // relation fields
    creator      User          @relation(fields: [creatorId], references: [id])
    creatorId    String
    participants Participant[]

    @@unique([name, creatorId])
}
